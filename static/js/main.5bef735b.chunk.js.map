{"version":3,"sources":["components/Sunrise.js","components/WeatherCard.js","components/FiveDaysWeather.js","App.js","index.js"],"names":["convertTimeStamp","unix","offset","time","Date","console","log","getHours","getMinutes","SunRise","props","className","xmlns","fill","viewBox","d","sunrise","sunset","ThermometerIcon","icon","temp","width","height","WeatherCard","weather","arrowDirection","transform","current","wind_deg","transitionDuration","getDate","getMonth","wind_speed","style","class","dailyweather","day","dt","FiveDaysWeather","slice","map","e","i","CurrentTime","useState","seconds","updateSeconds","setInterval","getSeconds","timeZoneOffset","date","localTime","getTime","TZoffset","getTimezoneOffset","toLocaleString","convertTime","substring","indexOf","length","App","currentCityWeather","setCurrentCityWeather","selectedCityName","setSelectedCityName","selectedCityOS","setSelectedCityOS","cities","name","timeZone","lat","lng","value","onChange","target","index","findIndex","element","fetch","then","res","json","response","catch","error","window","alert","disabled","selected","hidden","city","timezone_offset","daily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bef735b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//component which display sunrise and sunset time\r\nconst SunRise = (props) =>{\r\n\r\nreturn(\r\n    <div className=\"bg-dark bg-opacity-75 h-100 bg-gradient m-3 p-3 rounded shadow col-12 col-xl-5\">\r\n        <div className=\"row align-items-cetner justify-content-center\">\r\n            <div className=\"col-3 d-flex justify-content-center\"> \r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"sunRise-icon bi bi-brightness-alt-high\" fill=\"currentColor\"  viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 3a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 3zm8 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zm-13.5.5a.5.5 0 0 0 0-1h-2a.5.5 0 0 0 0 1h2zm11.157-6.157a.5.5 0 0 1 0 .707l-1.414 1.414a.5.5 0 1 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm-9.9 2.121a.5.5 0 0 0 .707-.707L3.05 5.343a.5.5 0 1 0-.707.707l1.414 1.414zM8 7a4 4 0 0 0-4 4 .5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5 4 4 0 0 0-4-4zm0 1a3 3 0 0 1 2.959 2.5H5.04A3 3 0 0 1 8 8z\"/>\r\n                </svg>\r\n            </div>\r\n            <div className=\"col-2 d-flex justify-content-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"sunRise-icon bi bi-arrow-right\" fill=\"currentColor\"  viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"/>\r\n                </svg>\r\n            </div>\r\n            <div className=\"col-3 d-flex justify-content-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"sunRise-icon bi bi-moon-stars\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z\"/>\r\n                    <path d=\"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z\"/>\r\n                </svg>\r\n            </div> \r\n        </div>\r\n        <div className=\"row align-items-cetner justify-content-center\">\r\n            <div className=\"col-3 d-flex justify-content-center\"> \r\n                <p>\r\n                    Sunrise: { convertTimeStamp(props.sunrise,props.offset)} \r\n                </p>\r\n            </div>\r\n            <div className=\"col-2 d-flex justify-content-center\">     \r\n            </div>\r\n            <div className=\"col-3 d-flex justify-content-center\">\r\n                <p>\r\n                    Sunset: {convertTimeStamp(props.sunset,props.offset)} \r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\n//Function that converts sunset and sunrise hours from utc to local time\r\nconst convertTimeStamp =(unix,offset) =>{\r\n    var time = new Date((unix -(-offset+3600))*1000);\r\n    console.log(offset-1)\r\n    var hours = time.getHours() < 10 ? '0'+ time.getHours() : time.getHours();\r\n    var minutes = time.getMinutes() < 10 ? '0'+ time.getMinutes() : time.getMinutes();\r\n    return(\r\n            hours+\":\"+minutes\r\n    )\r\n}\r\n\r\nexport default SunRise;","import React from \"react\";\r\n\r\n//Component which displays weather data for current day\r\nfunction WeatherCard(props){\r\nconst weather = props.weather; //Seting new constant which contains weather data fetched\r\n\r\n//Style for icon which shows wind direction. Arrow is rotated according to wind direction\r\nconst arrowDirection = {\r\n    transform: `rotateZ(${weather.current.wind_deg}deg)`,\r\n    transitionDuration: '0.4s'\r\n}\r\n\r\nreturn(  \r\n    <div className=\"col-12 h-100  col-xl-5 col-lg-5 bg-dark bg-gradient bg-opacity-75 p-3 rounded shadow\">\r\n      <h4 className=\"\">\r\n        Weather for today ({ new Date().getDate() + \"-\"+  (new Date().getMonth()*1+1)})\r\n      </h4>\r\n      {console.log(weather)}\r\n      <div>\r\n        <p>\r\n          Temperature: {weather.current.temp}° <ThermometerIcon temp={weather.current.temp}/>\r\n        </p>\r\n      </div>\r\n      <div className=\"flex-row d-flex align-items-center\">\r\n        <p className=\"m-0 me-3\">Wind: {weather.current.wind_speed} \r\n          km/h \r\n        </p> \r\n        <div className=\"d-flex flex-column align-items-center justify-content-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" style={arrowDirection} width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\">\r\n            <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"/>\r\n          </svg>\r\n          <p className=\"m-0 mt-1\">\r\n            {weather.current.wind_deg}°\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n)\r\n}\r\n\r\n//Function below returns thermometer icon, which is most accurate to temperature. \r\nconst ThermometerIcon = (props) =>{\r\n    const temp = props.temp;\r\n    var icon;\r\n    switch (true) {\r\n        case temp <= 0:\r\n             icon = \r\n             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M8 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n              <path d=\"M8 0a2.5 2.5 0 0 0-2.5 2.5v7.55a3.5 3.5 0 1 0 5 0V2.5A2.5 2.5 0 0 0 8 0zM6.5 2.5a1.5 1.5 0 1 1 3 0v7.987l.167.15a2.5 2.5 0 1 1-3.333 0l.166-.15V2.5z\"/>\r\n            </svg>\r\n            break;\r\n        case  temp <= 10:\r\n              icon = \r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer-low\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M9.5 12.5a1.5 1.5 0 1 1-2-1.415V9.5a.5.5 0 0 1 1 0v1.585a1.5 1.5 0 0 1 1 1.415z\"/>\r\n              <path d=\"M5.5 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM8 1a1.5 1.5 0 0 0-1.5 1.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0l-.166-.15V2.5A1.5 1.5 0 0 0 8 1z\"/>\r\n              </svg>\r\n            break;\r\n        case  temp <= 20 :\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer-half\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M9.5 12.5a1.5 1.5 0 1 1-2-1.415V6.5a.5.5 0 0 1 1 0v4.585a1.5 1.5 0 0 1 1 1.415z\"/>\r\n              <path d=\"M5.5 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM8 1a1.5 1.5 0 0 0-1.5 1.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0l-.166-.15V2.5A1.5 1.5 0 0 0 8 1z\"/>\r\n            </svg>\r\n            break;\r\n        case temp >=20 :\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer-high\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M9.5 12.5a1.5 1.5 0 1 1-2-1.415V2.5a.5.5 0 0 1 1 0v8.585a1.5 1.5 0 0 1 1 1.415z\"/>\r\n              <path d=\"M5.5 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM8 1a1.5 1.5 0 0 0-1.5 1.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0l-.166-.15V2.5A1.5 1.5 0 0 0 8 1z\"/>\r\n            </svg>\r\n            break;\r\n        default:\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer\" viewBox=\"0 0 16 16\">\r\n             <path d=\"M8 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n             <path d=\"M8 0a2.5 2.5 0 0 0-2.5 2.5v7.55a3.5 3.5 0 1 0 5 0V2.5A2.5 2.5 0 0 0 8 0zM6.5 2.5a1.5 1.5 0 1 1 3 0v7.987l.167.15a2.5 2.5 0 1 1-3.333 0l.166-.15V2.5z\"/>\r\n           </svg>\r\n            \r\n    }\r\n    return(\r\n        icon\r\n    )\r\n}\r\n export default WeatherCard;","import React from \"react\";\r\n\r\n//Component that displays weather data for upcoming 5 days\r\nfunction FiveDaysWeather(props){\r\n\r\n    const weather = props.weather.slice(1,6);//Data fetched from API contains weather for 16 days. In order to get weather just for next 5 days, arrays is sliced\r\n\r\n    return(\r\n        weather.map( (e,i) => <WeatherCard dailyweather={weather[i]} key={i} ></WeatherCard>)\r\n    )\r\n}\r\n\r\n//Single weather card\r\nfunction WeatherCard(props){\r\n\r\nconst weather = props.dailyweather;\r\n\r\n//Style for icon which shows wind direction. Arrow is rotated according to wind direction\r\nconst arrowDirection = {\r\n    transform: `rotateZ(${weather.wind_deg}deg)`,\r\n    transitionDuration: '0.4s'\r\n}\r\n\r\nreturn(\r\n    <div className=\"col-6 col-md-3 col-lg-2  bg-dark bg-gradient bg-opacity-75 p-2 rounded shadow\">\r\n        <div className=\"col-12 d-flex justify-content-center align-items-center no-wrap\">\r\n            <ThermometerIcon className=\"col-2 p-0\" temp={weather.temp.day}/>\r\n            <p className=\"col-10 m-0 \">\r\n                Temperature: {weather.temp.day+'°'} \r\n            </p>\r\n        </div>\r\n        <div className=\" d-flex align-items-center flex-wrap mt-2\">\r\n            <p className=\" col-12 m-0 me-3 \">\r\n                Wind: {weather.wind_speed} km/h \r\n            </p> \r\n            <div className=\" col-12 d-flex flex-row align-items-center justify-content-start\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" style={arrowDirection} width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up-circle\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\"/>\r\n                </svg>\r\n                <p className=\"m-0 ms-2\">\r\n                    {weather.wind_deg}°\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <p className=\"m-0 mt-2 col-12 rounded shadow text-center bg-info bg-opacity-25 text-light\"> \r\n            { new Date(weather.dt*1000).getDate() + \"-\"+  (new Date().getMonth()*1+1)}\r\n        </p>\r\n    </div>\r\n)\r\n}\r\n\r\n//Function below returns thermometer icon, which is most accurate to temperature. \r\nconst ThermometerIcon = (props) =>{\r\n\r\n    const temp = props.temp;\r\n\r\n    var icon;\r\n\r\n    switch (true) {\r\n        case temp <= 0:\r\n             icon = \r\n             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n                <path d=\"M8 0a2.5 2.5 0 0 0-2.5 2.5v7.55a3.5 3.5 0 1 0 5 0V2.5A2.5 2.5 0 0 0 8 0zM6.5 2.5a1.5 1.5 0 1 1 3 0v7.987l.167.15a2.5 2.5 0 1 1-3.333 0l.166-.15V2.5z\"/>\r\n            </svg>\r\n            break;\r\n        case  temp <= 10:\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer-low\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M9.5 12.5a1.5 1.5 0 1 1-2-1.415V9.5a.5.5 0 0 1 1 0v1.585a1.5 1.5 0 0 1 1 1.415z\"/>\r\n                <path d=\"M5.5 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM8 1a1.5 1.5 0 0 0-1.5 1.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0l-.166-.15V2.5A1.5 1.5 0 0 0 8 1z\"/>\r\n            </svg>\r\n          break;\r\n        case  temp <= 20 :\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer-half\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M9.5 12.5a1.5 1.5 0 1 1-2-1.415V6.5a.5.5 0 0 1 1 0v4.585a1.5 1.5 0 0 1 1 1.415z\"/>\r\n                <path d=\"M5.5 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM8 1a1.5 1.5 0 0 0-1.5 1.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0l-.166-.15V2.5A1.5 1.5 0 0 0 8 1z\"/>\r\n            </svg>\r\n          break;\r\n        case temp >=20 :\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer-high\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M9.5 12.5a1.5 1.5 0 1 1-2-1.415V2.5a.5.5 0 0 1 1 0v8.585a1.5 1.5 0 0 1 1 1.415z\"/>\r\n                <path d=\"M5.5 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM8 1a1.5 1.5 0 0 0-1.5 1.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0l-.166-.15V2.5A1.5 1.5 0 0 0 8 1z\"/>\r\n            </svg>\r\n          break;\r\n        default:\r\n            icon = \r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-thermometer\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8 14a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\"/>\r\n                <path d=\"M8 0a2.5 2.5 0 0 0-2.5 2.5v7.55a3.5 3.5 0 1 0 5 0V2.5A2.5 2.5 0 0 0 8 0zM6.5 2.5a1.5 1.5 0 1 1 3 0v7.987l.167.15a2.5 2.5 0 1 1-3.333 0l.166-.15V2.5z\"/>\r\n           </svg>\r\n            \r\n    }\r\n    return(\r\n        icon\r\n    )\r\n}\r\n\r\nexport default FiveDaysWeather;","import React from \"react\";\nimport { useState } from \"react\";\nimport SunRise from \"./components/Sunrise\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport FiveDaysWeather from './components/FiveDaysWeather';\n//App component\nfunction App() {\n\n  //Key to acces API. It should be hidden\n  const weatherApiKey = '98b8ae4676e751b25a28160f8c3a8be7';\n\n  //Weather api URL\n  const weatherApiUrl = `https://api.openweathermap.org/data/2.5/onecall?`\n  \n  //Hook which contains weather for selected city. After it's value is diffrent then false, it means that data has been fetched and app is ready to render\n  const [currentCityWeather, setCurrentCityWeather] = useState(false);\n\n  //Name of selected city\n  const [selectedCityName, setSelectedCityName] = useState('');\n\n  //Timezone offset of selected city. Used to calc local time\n  const [selectedCityOS, setSelectedCityOS] = useState('');\n\n //Array of objects that contains all data crucial for our APP\n  const cities=[\n    {\n    name: 'Poznań',//Name of the cty\n    timeZone: 'CET',//Timezone (this value isn't used, however I've decided to keep it in case of further development)\n    offset: +1, //Timezone offset\n    lat: '52.409538',//City's latitude - used to fetch data for this city\n    lng: '16.931992',//City's longtitude - used to fetch data for this city\n    },\n    {\n    name: 'Londyn',\n    timeZone:'GMT',\n    offset: 0,\n    lat: '51.509865',\n    lng: '-0.118092',\n    },\n    {\n    name: 'Havana',\n    timeZone:'CST',\n    offset: -5,\n    lat: '23.113592',\n    lng: '-82.366592',\n    }\n  ];\n\n  //Function that fetches data for given area. This function takes as arguments latitude and longtitude of selected city. It returns weather data for now and 16 days ahead.\n  const getWeather = (lat,lng) =>{\n    fetch(`${weatherApiUrl}lat=${lat}&lon=${lng}&exclude=minutely,alerts,hourly&appid=${weatherApiKey}&units=metric`)\n    .then(res=>res.json())\n    .then(response => setCurrentCityWeather(response))//Updating our weather hook. After hook is updated, app render is trigered\n    .catch(error => {\n      window.alert('Failed to download data. Please check your internet connection and try again.')//Alert that informs user of error with data fetching\n    })\n  }\n\n  return (\n    <div \n    className=\"shadow-lg d-flex justify-content-center flex-column align-items-center container-lg bg-dark bg-gradient bg-opacity-10 mt-3 rounded p-2\">\n      <div \n      className=\"d-flex align-items-center flex-column\">\n        <h2 \n        className=\" p-2\">\n          Choose city\n        </h2>\n        <select \n        className=\"col-9\" \n        value={selectedCityName} \n        onChange={ e => { \n        setSelectedCityName(e.target.value);\n        const index = cities.findIndex(element => element.name === e.target.value)\n        setSelectedCityOS(cities[index].offset)\n        getWeather(cities[index].lat,cities[index].lng)\n       }}>\n          <option \n          disabled \n          selected \n          hidden>\n            Show list\n          </option>\n          {cities.map( (city,i)=> <option key={i} value={city.name}>{city.name}</option>)}\n        </select>\n      </div>\n     <div \n        className=\"col-10 text-center\">\n          <h3>\n            {selectedCityName}  \n          </h3>\n          <div \n          className=\"d-flex p-2 flex-row justify-content-start align-items-center\">\n            {currentCityWeather ? <CurrentTime offset={selectedCityOS}/>: null}\n          </div>   \n        </div>\n        <div \n        className=\"d-flex row col-10 justify-content-center align-items-center col-lg-8 flex-lg-row\">\n        {currentCityWeather ? <SunRise sunrise={currentCityWeather.current.sunrise} sunset={currentCityWeather.current.sunset} offset={currentCityWeather.timezone_offset}></SunRise>: null}\n        {currentCityWeather ? <WeatherCard weather={currentCityWeather}></WeatherCard>:null}\n        </div>\n        {currentCityWeather ? <h2 className=\"mt-3\">5-days weather</h2> : <h2 className=\"mt-3\">Weather App</h2> } \n        <div \n        className=\" col-12 mb-3 d-flex flex-row  overflow-auto gap-3 mt-3 justify-content-lg-center\">\n        {currentCityWeather ? <FiveDaysWeather weather={currentCityWeather.daily}></FiveDaysWeather>:null}\n      </div>\n    </div>\n  );\n}\n//Function that converts time users local to local for given offset. As a argument it takes time zone offset\nconst convertTime = (timeZoneOffset) =>{\n  const date = new Date(); //intialize new Date object\n  const localTime = date.getTime(); //get current time\n  const TZoffset = date.getTimezoneOffset() * 60000; //get TZ offset and muliply it by 60000(miliseconds in one minute)\n  const utc = localTime + TZoffset; //calc utc time\n  const newDate = new Date(utc + (3600000*timeZoneOffset));//new Date object which takes as argument timezone offset * miliseconds in one hour\n  return newDate.toLocaleString();\n}\n  //Component to display current time\n  const CurrentTime =  (props) =>{\n  const [seconds,updateSeconds] = useState(0);\n  setInterval(()=> updateSeconds(new Date().getSeconds()),1000)\n    const time = convertTime(props.offset)\n\n  return(\n  <>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock\" viewBox=\"0 0 16 16\">\n      <path d=\"M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z\"/>\n      <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z\"/>\n    </svg>\n    <div>\n      <p className=\"m-0 ms-2 fs-3\"> {time.substring(time.indexOf(',')+1,time.length-3)}{seconds <10 ? \":0\"+seconds : \":\"+seconds}</p> \n    </div>\n  </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\nimport './resources/style.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}